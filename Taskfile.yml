# https://taskfile.dev

version: '3'

vars:
  APP_NAME: proxite
  DOCKER_IMAGE: proxite:latest
  DIST_DIR: dist
  GIT_COMMIT:
    sh: git rev-parse --short HEAD
  BUILD_TIME:
    sh: date -u +'%Y-%m-%dT%H:%M:%SZ'

tasks:
  clean:
    desc: "Clean build output directory"
    cmds:
      - rm -rf {{.dist_dir}}
    silent: true

  build-linux:
    desc: "Build binary for Linux (amd64)"
    cmds:
      - GOOS=linux GOARCH=amd64 go build -o {{.dist_dir}}/{{.app_name}}-linux-amd64 .
    silent: true

  build-windows:
    desc: "Build binary for Windows (amd64)"
    cmds:
      - GOOS=windows GOARCH=amd64 go build -o {{.dist_dir}}/{{.app_name}}-windows-amd64.exe .
    silent: true

  build-darwin:
    desc: "Build binary for macOS (amd64)"
    cmds:
      - GOOS=darwin GOARCH=amd64 go build -o {{.dist_dir}}/{{.app_name}}-darwin-amd64 .
    silent: true

  build-all:
    desc: "Build all platforms"
    cmds:
      - task: build-linux
      - task: build-windows
      - task: build-darwin
    deps: [ clean ]
    parallel: true

  build:alpine:
    desc: Build alpine image
    cmds:
      - docker build -f docker/alpine.Dockerfile -t {{.APP_NAME}}:alpine .

  build:slim:
    desc: Build debian slim image
    cmds:
      - docker build -f docker/slim.Dockerfile -t {{.APP_NAME}}:slim .

  build:all:
    desc: Build all image variants
    deps: [ build:alpine, build:slim ]

  docker-build:
    desc: "build docker container"
    cmds:
      - docker build -t {{.DOCKER_IMAGE}} .
